{
    "name": "CHTL",
    "scopeName": "source.chtl",
    "fileTypes": ["chtl"],
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#blocks"
        },
        {
            "include": "#templates"
        },
        {
            "include": "#custom"
        },
        {
            "include": "#origin"
        },
        {
            "include": "#import"
        },
        {
            "include": "#namespace"
        },
        {
            "include": "#configuration"
        },
        {
            "include": "#elements"
        },
        {
            "include": "#attributes"
        },
        {
            "include": "#text-nodes"
        },
        {
            "include": "#style-blocks"
        },
        {
            "include": "#script-blocks"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#strings"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.chtl",
                    "match": "//.*$"
                },
                {
                    "name": "comment.block.chtl",
                    "begin": "/\\*",
                    "end": "\\*/"
                },
                {
                    "name": "comment.line.generator.chtl",
                    "match": "--.*$",
                    "captures": {
                        "0": {
                            "name": "comment.line.generator.chtl"
                        }
                    }
                }
            ]
        },
        "blocks": {
            "patterns": [
                {
                    "name": "meta.block.chtl",
                    "match": "\\[(Template|Custom|Origin|Import|Namespace|Configuration)\\]",
                    "captures": {
                        "1": {
                            "name": "keyword.control.block.chtl"
                        }
                    }
                }
            ]
        },
        "templates": {
            "patterns": [
                {
                    "name": "meta.template.chtl",
                    "match": "\\[Template\\]\\s*(@Style|@Element|@Var)\\s+(\\w+)",
                    "captures": {
                        "1": {
                            "name": "storage.type.template.chtl"
                        },
                        "2": {
                            "name": "entity.name.template.chtl"
                        }
                    }
                }
            ]
        },
        "custom": {
            "patterns": [
                {
                    "name": "meta.custom.chtl",
                    "match": "\\[Custom\\]\\s*(@Style|@Element|@Var)\\s+(\\w+)(?:\\s+from\\s+(\\w+))?",
                    "captures": {
                        "1": {
                            "name": "storage.type.custom.chtl"
                        },
                        "2": {
                            "name": "entity.name.custom.chtl"
                        },
                        "3": {
                            "name": "entity.name.inherit.chtl"
                        }
                    }
                }
            ]
        },
        "origin": {
            "patterns": [
                {
                    "name": "meta.origin.chtl",
                    "match": "\\[Origin\\]\\s*(@Html|@Style|@JavaScript|@\\w+)(?:\\s+(\\w+))?",
                    "captures": {
                        "1": {
                            "name": "storage.type.origin.chtl"
                        },
                        "2": {
                            "name": "entity.name.origin.chtl"
                        }
                    }
                }
            ]
        },
        "import": {
            "patterns": [
                {
                    "name": "meta.import.chtl",
                    "match": "\\[Import\\]\\s*(?:\\[(\\w+)\\]\\s*)?(@\\w+)\\s+from\\s+([\\w.:/*]+)(?:\\s+as\\s+(\\w+))?",
                    "captures": {
                        "1": {
                            "name": "storage.modifier.import.chtl"
                        },
                        "2": {
                            "name": "storage.type.import.chtl"
                        },
                        "3": {
                            "name": "string.quoted.import.path.chtl"
                        },
                        "4": {
                            "name": "entity.name.import.alias.chtl"
                        }
                    }
                }
            ]
        },
        "namespace": {
            "patterns": [
                {
                    "name": "meta.namespace.chtl",
                    "match": "\\[Namespace\\]\\s+(\\w+)",
                    "captures": {
                        "1": {
                            "name": "entity.name.namespace.chtl"
                        }
                    }
                }
            ]
        },
        "configuration": {
            "patterns": [
                {
                    "name": "meta.configuration.chtl",
                    "match": "\\[Configuration\\](?:\\s*(@Config)\\s+(\\w+))?",
                    "captures": {
                        "1": {
                            "name": "storage.type.config.chtl"
                        },
                        "2": {
                            "name": "entity.name.config.chtl"
                        }
                    }
                }
            ]
        },
        "elements": {
            "patterns": [
                {
                    "name": "meta.element.chtl",
                    "match": "\\b(html|head|body|div|span|p|h[1-6]|a|img|ul|ol|li|table|tr|td|th|form|input|button|textarea|select|option)\\b",
                    "captures": {
                        "1": {
                            "name": "entity.name.tag.chtl"
                        }
                    }
                }
            ]
        },
        "attributes": {
            "patterns": [
                {
                    "name": "meta.attribute.chtl",
                    "match": "(\\w+)\\s*[:=]\\s*([^;]+);",
                    "captures": {
                        "1": {
                            "name": "entity.other.attribute-name.chtl"
                        },
                        "2": {
                            "name": "string.quoted.attribute-value.chtl"
                        }
                    }
                }
            ]
        },
        "text-nodes": {
            "patterns": [
                {
                    "name": "meta.text-node.chtl",
                    "begin": "\\btext\\s*\\{",
                    "end": "\\}",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.text.chtl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#strings"
                        }
                    ]
                }
            ]
        },
        "style-blocks": {
            "patterns": [
                {
                    "name": "meta.style-block.chtl",
                    "begin": "\\bstyle\\s*\\{",
                    "end": "\\}",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.style.chtl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "source.css"
                        },
                        {
                            "include": "#template-usage"
                        },
                        {
                            "include": "#variable-references"
                        }
                    ]
                }
            ]
        },
        "script-blocks": {
            "patterns": [
                {
                    "name": "meta.script-block.chtl",
                    "begin": "\\bscript\\s*\\{",
                    "end": "\\}",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.control.script.chtl"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#chtl-js-syntax"
                        },
                        {
                            "include": "source.js"
                        }
                    ]
                }
            ]
        },
        "chtl-js-syntax": {
            "patterns": [
                {
                    "name": "meta.enhanced-selector.chtl-js",
                    "match": "\\{\\{([^}]+)\\}\\}",
                    "captures": {
                        "1": {
                            "name": "string.quoted.selector.chtl-js"
                        }
                    }
                },
                {
                    "name": "keyword.operator.event-binding.chtl-js",
                    "match": "&->"
                },
                {
                    "name": "keyword.operator.arrow.chtl-js",
                    "match": "->"
                },
                {
                    "name": "keyword.control.animate.chtl-js",
                    "match": "\\banimate\\b"
                },
                {
                    "name": "keyword.control.listen.chtl-js",
                    "match": "\\blisten\\b"
                },
                {
                    "name": "keyword.control.vir.chtl-js",
                    "match": "\\bvir\\b"
                },
                {
                    "name": "keyword.control.delegate.chtl-js",
                    "match": "\\bdelegate\\b"
                },
                {
                    "name": "keyword.control.module.chtl-js",
                    "match": "\\bmodule\\b"
                }
            ]
        },
        "template-usage": {
            "patterns": [
                {
                    "name": "meta.template-usage.chtl",
                    "match": "(@Style|@Element|@Var)\\s+(\\w+)",
                    "captures": {
                        "1": {
                            "name": "storage.type.template-usage.chtl"
                        },
                        "2": {
                            "name": "entity.name.template-usage.chtl"
                        }
                    }
                }
            ]
        },
        "variable-references": {
            "patterns": [
                {
                    "name": "meta.variable-reference.chtl",
                    "match": "(\\w+)\\((\\w+)\\)",
                    "captures": {
                        "1": {
                            "name": "entity.name.variable-group.chtl"
                        },
                        "2": {
                            "name": "variable.other.variable-name.chtl"
                        }
                    }
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.chtl",
                    "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.chtl",
                    "match": "\\b(inherit|delete|insert|replace|except|use|from|as|after|before|at\\s+top|at\\s+bottom)\\b"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "name": "string.quoted.double.chtl",
                    "begin": "\"",
                    "end": "\"",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.quoted.single.chtl",
                    "begin": "'",
                    "end": "'",
                    "patterns": [
                        {
                            "name": "constant.character.escape.chtl",
                            "match": "\\\\."
                        }
                    ]
                },
                {
                    "name": "string.unquoted.chtl",
                    "match": "\\b[a-zA-Z][a-zA-Z0-9_-]*\\b(?=\\s*[;}])"
                }
            ]
        }
    }
}