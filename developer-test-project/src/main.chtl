// 开发者项目主文件 - 展示所有CHTL特征
// 严格按照CHTL语法文档.md实现

-- 这是生成器注释，会出现在最终HTML中

/*
 * 这是多行注释，不会出现在HTML中
 * 开发者：CHTL测试开发者
 * 项目：全功能CHTL网站
 */

// 单行注释，不会出现在HTML中

[Configuration]
{
    INDEX_INITIAL_COUNT = 1;
    DISABLE_STYLE_AUTO_ADD_CLASS = false;
    DISABLE_STYLE_AUTO_ADD_ID = false;
    DISABLE_SCRIPT_AUTO_ADD_CLASS = true;
    DISABLE_SCRIPT_AUTO_ADD_ID = true;
    DEBUG_MODE = false;
    DISABLE_DEFAULT_NAMESPACE = false;
    
    [Name]
    {
        btn = "button";
        card = "card-component";
        modal = "modal-dialog";
    }
    
    [OriginType]
    {
        Vue = "vue";
        React = "react";
        Angular = "angular";
    }
}

[Import] @Html from "header.html" as siteHeader
[Import] @Style from "reset.css"
[Import] @JavaScript from "polyfills.js" as polyFills
[Import] @Chtl from chtl::ui/components
[Import] @Chtl from chtl::layout/grid
[Import] @CJmod from advanced-ui-effects
[Import] @CJmod from data-binding

[Namespace] Theme
{
    [Template] @Var Colors
    {
        // 主题色彩系统
        primary: "#2563eb";
        secondary: "#64748b";
        accent: "#f59e0b";
        success: "#10b981";
        warning: "#f59e0b";
        error: "#ef4444";
        info: "#3b82f6";
        
        // 中性色
        white: "#ffffff";
        black: "#000000";
        gray100: "#f8fafc";
        gray200: "#e2e8f0";
        gray300: "#cbd5e1";
        gray400: "#94a3b8";
        gray500: "#64748b";
        gray600: "#475569";
        gray700: "#334155";
        gray800: "#1e293b";
        gray900: "#0f172a";
        
        // 透明度
        overlay: "rgba(0, 0, 0, 0.5)";
        backdrop: "rgba(255, 255, 255, 0.8)";
    }
    
    [Template] @Var Spacing
    {
        // 间距系统
        xs: "0.25rem";    // 4px
        sm: "0.5rem";     // 8px
        md: "1rem";       // 16px
        lg: "1.5rem";     // 24px
        xl: "2rem";       // 32px
        "2xl": "3rem";    // 48px
        "3xl": "4rem";    // 64px
        "4xl": "6rem";    // 96px
    }
    
    [Template] @Var Typography
    {
        // 字体系统
        fontFamily: "-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif";
        monoFamily: "'Fira Code', 'Monaco', 'Consolas', monospace";
        
        // 字体大小
        xs: "0.75rem";    // 12px
        sm: "0.875rem";   // 14px
        base: "1rem";     // 16px
        lg: "1.125rem";   // 18px
        xl: "1.25rem";    // 20px
        "2xl": "1.5rem";  // 24px
        "3xl": "1.875rem"; // 30px
        "4xl": "2.25rem"; // 36px
        
        // 字重
        thin: "100";
        light: "300";
        normal: "400";
        medium: "500";
        semibold: "600";
        bold: "700";
        extrabold: "800";
        black: "900";
        
        // 行高
        tight: "1.25";
        normal: "1.5";
        relaxed: "1.75";
    }
    
    [Template] @Var Shadows
    {
        sm: "0 1px 2px 0 rgba(0, 0, 0, 0.05)";
        base: "0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)";
        md: "0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)";
        lg: "0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)";
        xl: "0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)";
        "2xl": "0 25px 50px -12px rgba(0, 0, 0, 0.25)";
        inner: "inset 0 2px 4px 0 rgba(0, 0, 0, 0.06)";
    }
    
    [Template] @Style BaseComponent
    {
        box-sizing: "border-box";
        margin: "0";
        padding: "0";
        font-family: Typography(fontFamily);
        font-size: Typography(base);
        line-height: Typography(normal);
        color: Colors(gray800);
    }
    
    [Template] @Style Button
    {
        @Style BaseComponent;
        
        display: "inline-flex";
        align-items: "center";
        justify-content: "center";
        padding: Spacing(sm) Spacing(lg);
        border: "1px solid transparent";
        border-radius: "0.375rem";
        font-weight: Typography(medium);
        text-decoration: "none";
        cursor: "pointer";
        transition: "all 0.2s ease-in-out";
        user-select: "none";
        
        // 默认状态
        background-color: Colors(primary);
        color: Colors(white);
        border-color: Colors(primary);
        
        // 悬停状态
        &:hover {
            background-color: "#1d4ed8";
            border-color: "#1d4ed8";
            transform: "translateY(-1px)";
            box-shadow: Shadows(md);
        }
        
        // 激活状态
        &:active {
            transform: "translateY(0)";
            box-shadow: Shadows(sm);
        }
        
        // 禁用状态
        &:disabled {
            opacity: "0.5";
            cursor: "not-allowed";
            transform: "none";
            box-shadow: "none";
        }
    }
    
    [Template] @Style Card
    {
        @Style BaseComponent;
        
        background-color: Colors(white);
        border: "1px solid" Colors(gray200);
        border-radius: "0.5rem";
        padding: Spacing(lg);
        box-shadow: Shadows(sm);
        transition: "box-shadow 0.2s ease-in-out";
        
        &:hover {
            box-shadow: Shadows(md);
        }
    }
    
    [Template] @Element BaseButton
    {
        button
        {
            type: "button";
            class: "btn";
            
            style
            {
                @Style Button;
            }
        }
    }
    
    [Template] @Element BaseCard
    {
        div
        {
            class: "card";
            
            style
            {
                @Style Card;
            }
            
            div
            {
                class: "card-header";
                
                style
                {
                    .card-header
                    {
                        border-bottom: "1px solid" Colors(gray200);
                        padding-bottom: Spacing(md);
                        margin-bottom: Spacing(md);
                        font-weight: Typography(semibold);
                        font-size: Typography(lg);
                    }
                }
            }
            
            div
            {
                class: "card-body";
                
                style
                {
                    .card-body
                    {
                        line-height: Typography(relaxed);
                    }
                }
            }
        }
    }
}

[Namespace] Components
{
    [Custom] @Style PrimaryButton from Theme::Button
    {
        background-color: Theme::Colors(primary);
        border-color: Theme::Colors(primary);
        
        &:hover
        {
            background-color: "#1d4ed8";
            border-color: "#1d4ed8";
        }
    }
    
    [Custom] @Style SecondaryButton from Theme::Button
    {
        background-color: "transparent";
        color: Theme::Colors(secondary);
        border-color: Theme::Colors(secondary);
        
        &:hover
        {
            background-color: Theme::Colors(secondary);
            color: Theme::Colors(white);
        }
    }
    
    [Custom] @Style DangerButton from Theme::Button
    {
        background-color: Theme::Colors(error);
        border-color: Theme::Colors(error);
        
        &:hover
        {
            background-color: "#dc2626";
            border-color: "#dc2626";
        }
    }
    
    [Custom] @Element NavigationHeader from Theme::BaseCard
    {
        delete div[1];  // 删除card-body
        
        div[0]
        {
            style
            {
                .card-header
                {
                    background: "linear-gradient(135deg," Theme::Colors(primary) "," Theme::Colors(accent) ")";
                    color: Theme::Colors(white);
                    margin: "-" Theme::Spacing(lg);
                    margin-bottom: Theme::Spacing(lg);
                    padding: Theme::Spacing(lg);
                    border-radius: "0.5rem 0.5rem 0 0";
                    border-bottom: "none";
                }
            }
            
            text
            {
                "网站导航"
            }
        }
        
        insert after div[0]
        {
            nav
            {
                class: "main-nav";
                
                style
                {
                    .main-nav
                    {
                        padding: Theme::Spacing(md) "0";
                    }
                    
                    .nav-list
                    {
                        display: "flex";
                        list-style: "none";
                        gap: Theme::Spacing(lg);
                        margin: "0";
                        padding: "0";
                    }
                    
                    .nav-item
                    {
                        position: "relative";
                    }
                    
                    .nav-link
                    {
                        color: Theme::Colors(gray700);
                        text-decoration: "none";
                        font-weight: Theme::Typography(medium);
                        padding: Theme::Spacing(sm) Theme::Spacing(md);
                        border-radius: "0.25rem";
                        transition: "all 0.2s ease-in-out";
                    }
                    
                    .nav-link:hover
                    {
                        color: Theme::Colors(primary);
                        background-color: Theme::Colors(gray100);
                    }
                    
                    .nav-link.active
                    {
                        color: Theme::Colors(primary);
                        background-color: Theme::Colors(gray100);
                        font-weight: Theme::Typography(semibold);
                    }
                }
                
                ul
                {
                    class: "nav-list";
                    
                    li
                    {
                        class: "nav-item";
                        
                        a
                        {
                            href: "#home";
                            class: "nav-link active";
                            
                            text
                            {
                                "🏠 首页"
                            }
                        }
                    }
                    
                    li
                    {
                        class: "nav-item";
                        
                        a
                        {
                            href: "#products";
                            class: "nav-link";
                            
                            text
                            {
                                "📦 产品"
                            }
                        }
                    }
                    
                    li
                    {
                        class: "nav-item";
                        
                        a
                        {
                            href: "#about";
                            class: "nav-link";
                            
                            text
                            {
                                "ℹ️ 关于"
                            }
                        }
                    }
                    
                    li
                    {
                        class: "nav-item";
                        
                        a
                        {
                            href: "#contact";
                            class: "nav-link";
                            
                            text
                            {
                                "📞 联系"
                            }
                        }
                    }
                }
                
                script
                {
                    // CHTL JS导航功能
                    module
                    {
                        load: ./modules/navigation.cjjs,
                        load: ./modules/smooth-scroll.cjjs
                    }
                    
                    {{.nav-link}} &-> click
                    {
                        // 移除所有active类
                        {{.nav-link}}->forEach(link => {
                            link.classList.remove('active');
                        });
                        
                        // 添加active类到当前链接
                        {{&}}->classList.add('active');
                        
                        // 平滑滚动到目标
                        const target = {{&}}->getAttribute('href');
                        if (target.startsWith('#')) {
                            const element = document.querySelector(target);
                            if (element) {
                                animate
                                {
                                    target: window,
                                    duration: 800,
                                    easing: "ease-in-out",
                                    
                                    begin: {
                                        scrollTop: window.pageYOffset
                                    },
                                    
                                    end: {
                                        scrollTop: element.offsetTop - 80
                                    }
                                }
                            }
                        }
                    }
                    
                    vir navigationController = listen
                    {
                        setActiveLink: (href) => {
                            {{.nav-link}}->forEach(link => {
                                link.classList.toggle('active', link.getAttribute('href') === href);
                            });
                        },
                        
                        getCurrentSection: () => {
                            const sections = document.querySelectorAll('section[id]');
                            const scrollTop = window.pageYOffset + 100;
                            
                            for (let section of sections) {
                                if (section.offsetTop <= scrollTop && 
                                    section.offsetTop + section.offsetHeight > scrollTop) {
                                    return '#' + section.id;
                                }
                            }
                            return '#home';
                        }
                    };
                    
                    // 滚动时更新导航状态
                    window.addEventListener('scroll', () => {
                        const currentSection = navigationController->getCurrentSection();
                        navigationController->setActiveLink(currentSection);
                    });
                }
            }
        }
    }
    
    [Custom] @Element InteractiveCard from Theme::BaseCard
    {
        insert at top
        {
            div
            {
                class: "card-badge";
                
                style
                {
                    .card-badge
                    {
                        position: "absolute";
                        top: "-" Theme::Spacing(sm);
                        right: "-" Theme::Spacing(sm);
                        background: "linear-gradient(135deg," Theme::Colors(accent) "," Theme::Colors(warning) ")";
                        color: Theme::Colors(white);
                        padding: Theme::Spacing(xs) Theme::Spacing(sm);
                        border-radius: "9999px";
                        font-size: Theme::Typography(xs);
                        font-weight: Theme::Typography(bold);
                        box-shadow: Theme::Shadows(md);
                        z-index: "10";
                    }
                }
                
                text
                {
                    "NEW"
                }
            }
        }
        
        div[1]
        {
            style
            {
                .card-body
                {
                    position: "relative";
                    overflow: "hidden";
                }
                
                &::before
                {
                    content: "''";
                    position: "absolute";
                    top: "0";
                    left: "-100%";
                    width: "100%";
                    height: "100%";
                    background: "linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent)";
                    transition: "left 0.6s ease";
                    z-index: "1";
                }
                
                &:hover::before
                {
                    left: "100%";
                }
            }
            
            script
            {
                {{.card}} &-> mouseenter
                {
                    animate
                    {
                        target: {{&}},
                        duration: 300,
                        easing: "ease-out",
                        
                        begin: {
                            transform: "scale(1) rotate(0deg)",
                            boxShadow: Theme::Shadows(sm)
                        },
                        
                        end: {
                            transform: "scale(1.02) rotate(0.5deg)",
                            boxShadow: Theme::Shadows(xl)
                        }
                    }
                }
                
                {{.card}} &-> mouseleave
                {
                    animate
                    {
                        target: {{&}},
                        duration: 200,
                        easing: "ease-in",
                        
                        begin: {
                            transform: "scale(1.02) rotate(0.5deg)",
                            boxShadow: Theme::Shadows(xl)
                        },
                        
                        end: {
                            transform: "scale(1) rotate(0deg)",
                            boxShadow: Theme::Shadows(sm)
                        }
                    }
                }
            }
        }
    }
    
    [Custom] @Element AdvancedForm from Theme::BaseCard
    {
        replace div[0]
        {
            div
            {
                class: "form-header";
                
                style
                {
                    .form-header
                    {
                        background: "linear-gradient(135deg," Theme::Colors(info) "," Theme::Colors(primary) ")";
                        color: Theme::Colors(white);
                        margin: "-" Theme::Spacing(lg);
                        margin-bottom: Theme::Spacing(lg);
                        padding: Theme::Spacing(lg);
                        border-radius: "0.5rem 0.5rem 0 0";
                        text-align: "center";
                    }
                    
                    .form-title
                    {
                        font-size: Theme::Typography(2xl);
                        font-weight: Theme::Typography(bold);
                        margin-bottom: Theme::Spacing(sm);
                    }
                    
                    .form-subtitle
                    {
                        opacity: "0.9";
                        font-size: Theme::Typography(sm);
                    }
                }
                
                h2
                {
                    class: "form-title";
                    
                    text
                    {
                        "联系我们"
                    }
                }
                
                p
                {
                    class: "form-subtitle";
                    
                    text
                    {
                        "填写下面的表单，我们会尽快回复您"
                    }
                }
            }
        }
        
        div[1]
        {
            form
            {
                class: "contact-form";
                method: "POST";
                action: "/submit-contact";
                
                style
                {
                    .contact-form
                    {
                        display: "grid";
                        gap: Theme::Spacing(lg);
                    }
                    
                    .form-group
                    {
                        display: "flex";
                        flex-direction: "column";
                        gap: Theme::Spacing(xs);
                    }
                    
                    .form-label
                    {
                        font-weight: Theme::Typography(medium);
                        color: Theme::Colors(gray700);
                        font-size: Theme::Typography(sm);
                    }
                    
                    .form-input
                    {
                        padding: Theme::Spacing(sm) Theme::Spacing(md);
                        border: "1px solid" Theme::Colors(gray300);
                        border-radius: "0.375rem";
                        font-size: Theme::Typography(base);
                        transition: "all 0.2s ease-in-out";
                        background-color: Theme::Colors(white);
                    }
                    
                    .form-input:focus
                    {
                        outline: "none";
                        border-color: Theme::Colors(primary);
                        box-shadow: "0 0 0 3px rgba(37, 99, 235, 0.1)";
                    }
                    
                    .form-input.error
                    {
                        border-color: Theme::Colors(error);
                        box-shadow: "0 0 0 3px rgba(239, 68, 68, 0.1)";
                    }
                    
                    .form-textarea
                    {
                        min-height: "120px";
                        resize: "vertical";
                        font-family: Theme::Typography(fontFamily);
                    }
                    
                    .form-error
                    {
                        color: Theme::Colors(error);
                        font-size: Theme::Typography(xs);
                        margin-top: Theme::Spacing(xs);
                    }
                    
                    .form-actions
                    {
                        display: "flex";
                        gap: Theme::Spacing(md);
                        justify-content: "flex-end";
                        margin-top: Theme::Spacing(lg);
                    }
                }
                
                div
                {
                    class: "form-group";
                    
                    label
                    {
                        for: "fullName";
                        class: "form-label";
                        
                        text
                        {
                            "姓名 *"
                        }
                    }
                    
                    input
                    {
                        type: "text";
                        id: "fullName";
                        name: "fullName";
                        class: "form-input";
                        placeholder: "请输入您的姓名";
                        required: true;
                    }
                    
                    div
                    {
                        class: "form-error";
                        id: "fullName-error";
                        
                        style
                        {
                            display: "none";
                        }
                    }
                }
                
                div
                {
                    class: "form-group";
                    
                    label
                    {
                        for: "email";
                        class: "form-label";
                        
                        text
                        {
                            "邮箱地址 *"
                        }
                    }
                    
                    input
                    {
                        type: "email";
                        id: "email";
                        name: "email";
                        class: "form-input";
                        placeholder: "your.email@example.com";
                        required: true;
                    }
                    
                    div
                    {
                        class: "form-error";
                        id: "email-error";
                        
                        style
                        {
                            display: "none";
                        }
                    }
                }
                
                div
                {
                    class: "form-group";
                    
                    label
                    {
                        for: "phone";
                        class: "form-label";
                        
                        text
                        {
                            "电话号码"
                        }
                    }
                    
                    input
                    {
                        type: "tel";
                        id: "phone";
                        name: "phone";
                        class: "form-input";
                        placeholder: "+86 138 0000 0000";
                    }
                }
                
                div
                {
                    class: "form-group";
                    
                    label
                    {
                        for: "subject";
                        class: "form-label";
                        
                        text
                        {
                            "主题 *"
                        }
                    }
                    
                    select
                    {
                        id: "subject";
                        name: "subject";
                        class: "form-input";
                        required: true;
                        
                        option
                        {
                            value: "";
                            
                            text
                            {
                                "请选择主题"
                            }
                        }
                        
                        option
                        {
                            value: "general";
                            
                            text
                            {
                                "一般咨询"
                            }
                        }
                        
                        option
                        {
                            value: "technical";
                            
                            text
                            {
                                "技术支持"
                            }
                        }
                        
                        option
                        {
                            value: "business";
                            
                            text
                            {
                                "商务合作"
                            }
                        }
                        
                        option
                        {
                            value: "feedback";
                            
                            text
                            {
                                "意见反馈"
                            }
                        }
                    }
                    
                    div
                    {
                        class: "form-error";
                        id: "subject-error";
                        
                        style
                        {
                            display: "none";
                        }
                    }
                }
                
                div
                {
                    class: "form-group";
                    
                    label
                    {
                        for: "message";
                        class: "form-label";
                        
                        text
                        {
                            "消息内容 *"
                        }
                    }
                    
                    textarea
                    {
                        id: "message";
                        name: "message";
                        class: "form-input form-textarea";
                        placeholder: "请详细描述您的问题或需求...";
                        required: true;
                    }
                    
                    div
                    {
                        class: "form-error";
                        id: "message-error";
                        
                        style
                        {
                            display: "none";
                        }
                    }
                }
                
                div
                {
                    class: "form-actions";
                    
                    button
                    {
                        type: "button";
                        class: "btn-reset";
                        
                        style
                        {
                            @Style SecondaryButton;
                        }
                        
                        text
                        {
                            "重置"
                        }
                    }
                    
                    button
                    {
                        type: "submit";
                        class: "btn-submit";
                        
                        style
                        {
                            @Style PrimaryButton;
                            
                            .btn-submit
                            {
                                position: "relative";
                            }
                            
                            .btn-submit:disabled
                            {
                                opacity: "0.7";
                                cursor: "not-allowed";
                            }
                            
                            .btn-submit.loading::after
                            {
                                content: "''";
                                position: "absolute";
                                width: "16px";
                                height: "16px";
                                margin: "auto";
                                border: "2px solid transparent";
                                border-top-color: Theme::Colors(white);
                                border-radius: "50%";
                                animation: "spin 1s linear infinite";
                            }
                            
                            @keyframes spin
                            {
                                0% { transform: "rotate(0deg)"; }
                                100% { transform: "rotate(360deg)"; }
                            }
                        }
                        
                        text
                        {
                            "发送消息"
                        }
                    }
                }
                
                script
                {
                    // 表单验证和提交逻辑
                    vir formValidator = listen
                    {
                        validateName: (name) => {
                            if (!name || name.trim().length < 2) {
                                return "姓名至少需要2个字符";
                            }
                            if (name.trim().length > 50) {
                                return "姓名不能超过50个字符";
                            }
                            return null;
                        },
                        
                        validateEmail: (email) => {
                            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                            if (!email || !emailRegex.test(email)) {
                                return "请输入有效的邮箱地址";
                            }
                            return null;
                        },
                        
                        validatePhone: (phone) => {
                            if (phone && phone.trim()) {
                                const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
                                if (!phoneRegex.test(phone.replace(/[\s\-\(\)]/g, ''))) {
                                    return "请输入有效的电话号码";
                                }
                            }
                            return null;
                        },
                        
                        validateMessage: (message) => {
                            if (!message || message.trim().length < 10) {
                                return "消息内容至少需要10个字符";
                            }
                            if (message.trim().length > 1000) {
                                return "消息内容不能超过1000个字符";
                            }
                            return null;
                        },
                        
                        showError: (fieldId, message) => {
                            const field = document.getElementById(fieldId);
                            const errorDiv = document.getElementById(fieldId + '-error');
                            
                            if (field && errorDiv) {
                                field.classList.add('error');
                                errorDiv.textContent = message;
                                errorDiv.style.display = 'block';
                            }
                        },
                        
                        clearError: (fieldId) => {
                            const field = document.getElementById(fieldId);
                            const errorDiv = document.getElementById(fieldId + '-error');
                            
                            if (field && errorDiv) {
                                field.classList.remove('error');
                                errorDiv.style.display = 'none';
                            }
                        },
                        
                        validateForm: () => {
                            const formData = {
                                fullName: {{#fullName}}->value,
                                email: {{#email}}->value,
                                phone: {{#phone}}->value,
                                subject: {{#subject}}->value,
                                message: {{#message}}->value
                            };
                            
                            let isValid = true;
                            
                            // 清除所有错误
                            ['fullName', 'email', 'phone', 'subject', 'message'].forEach(field => {
                                formValidator->clearError(field);
                            });
                            
                            // 验证各字段
                            const nameError = formValidator->validateName(formData.fullName);
                            if (nameError) {
                                formValidator->showError('fullName', nameError);
                                isValid = false;
                            }
                            
                            const emailError = formValidator->validateEmail(formData.email);
                            if (emailError) {
                                formValidator->showError('email', emailError);
                                isValid = false;
                            }
                            
                            const phoneError = formValidator->validatePhone(formData.phone);
                            if (phoneError) {
                                formValidator->showError('phone', phoneError);
                                isValid = false;
                            }
                            
                            if (!formData.subject) {
                                formValidator->showError('subject', '请选择主题');
                                isValid = false;
                            }
                            
                            const messageError = formValidator->validateMessage(formData.message);
                            if (messageError) {
                                formValidator->showError('message', messageError);
                                isValid = false;
                            }
                            
                            return { isValid, formData };
                        }
                    };
                    
                    // 实时验证
                    {{.form-input}}->delegate
                    {
                        target: {{.contact-form}},
                        blur: function(e) {
                            const fieldId = e.target.id;
                            const value = e.target.value;
                            
                            switch (fieldId) {
                                case 'fullName':
                                    const nameError = formValidator->validateName(value);
                                    if (nameError) {
                                        formValidator->showError(fieldId, nameError);
                                    } else {
                                        formValidator->clearError(fieldId);
                                    }
                                    break;
                                    
                                case 'email':
                                    const emailError = formValidator->validateEmail(value);
                                    if (emailError) {
                                        formValidator->showError(fieldId, emailError);
                                    } else {
                                        formValidator->clearError(fieldId);
                                    }
                                    break;
                                    
                                case 'phone':
                                    const phoneError = formValidator->validatePhone(value);
                                    if (phoneError) {
                                        formValidator->showError(fieldId, phoneError);
                                    } else {
                                        formValidator->clearError(fieldId);
                                    }
                                    break;
                                    
                                case 'message':
                                    const messageError = formValidator->validateMessage(value);
                                    if (messageError) {
                                        formValidator->showError(fieldId, messageError);
                                    } else {
                                        formValidator->clearError(fieldId);
                                    }
                                    break;
                            }
                        }
                    }
                    
                    {{.contact-form}} &-> submit
                    {
                        e.preventDefault();
                        
                        const validation = formValidator->validateForm();
                        
                        if (validation.isValid) {
                            const submitBtn = {{.btn-submit}};
                            const originalText = submitBtn->textContent;
                            
                            // 显示加载状态
                            submitBtn->disabled = true;
                            submitBtn->classList.add('loading');
                            submitBtn->textContent = '发送中...';
                            
                            // 模拟提交
                            setTimeout(() => {
                                // 成功动画
                                animate
                                {
                                    target: {{.contact-form}},
                                    duration: 500,
                                    easing: "ease-out",
                                    
                                    begin: {
                                        opacity: "1",
                                        transform: "scale(1)"
                                    },
                                    
                                    end: {
                                        opacity: "0.8",
                                        transform: "scale(0.98)"
                                    },
                                    
                                    callback: () => {
                                        // 显示成功消息
                                        {{.contact-form}}->innerHTML = `
                                            <div style="text-align: center; padding: ${Theme::Spacing(xl)};">
                                                <div style="font-size: 48px; margin-bottom: ${Theme::Spacing(md)};">✅</div>
                                                <h3 style="color: ${Theme::Colors(success)}; margin-bottom: ${Theme::Spacing(sm)};">发送成功！</h3>
                                                <p style="color: ${Theme::Colors(gray600)};">我们已收到您的消息，会尽快回复。</p>
                                            </div>
                                        `;
                                        
                                        animate
                                        {
                                            target: {{.contact-form}},
                                            duration: 300,
                                            easing: "ease-in",
                                            
                                            begin: {
                                                opacity: "0.8",
                                                transform: "scale(0.98)"
                                            },
                                            
                                            end: {
                                                opacity: "1",
                                                transform: "scale(1)"
                                            }
                                        }
                                    }
                                }
                            }, 2000);
                        }
                    }
                    
                    {{.btn-reset}} &-> click
                    {
                        // 重置表单
                        {{.contact-form}}->reset();
                        
                        // 清除所有错误
                        ['fullName', 'email', 'phone', 'subject', 'message'].forEach(field => {
                            formValidator->clearError(field);
                        });
                        
                        // 重置动画
                        animate
                        {
                            target: {{.contact-form}},
                            duration: 200,
                            easing: "ease-out",
                            
                            begin: {
                                opacity: "1"
                            },
                            
                            end: {
                                opacity: "0.5"
                            },
                            
                            callback: () => {
                                animate
                                {
                                    target: {{.contact-form}},
                                    duration: 200,
                                    easing: "ease-in",
                                    
                                    begin: {
                                        opacity: "0.5"
                                    },
                                    
                                    end: {
                                        opacity: "1"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}

[Origin] @Html siteHeader
{
    <header class="site-header">
        <div class="container">
            <div class="header-content">
                <div class="logo">
                    <h1>CHTL开发者项目</h1>
                    <p>展示所有CHTL语法功能的完整网站</p>
                </div>
                <div class="header-actions">
                    <button class="theme-toggle">🌙</button>
                    <button class="menu-toggle">☰</button>
                </div>
            </div>
        </div>
    </header>
}

[Origin] @Style globalReset
{
    *,
    *::before,
    *::after {
        box-sizing: border-box;
        margin: 0;
        padding: 0;
    }
    
    html {
        scroll-behavior: smooth;
        font-size: 16px;
    }
    
    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        line-height: 1.6;
        color: #1e293b;
        background-color: #ffffff;
        overflow-x: hidden;
    }
    
    img {
        max-width: 100%;
        height: auto;
    }
    
    button {
        border: none;
        background: none;
        cursor: pointer;
    }
    
    a {
        color: inherit;
        text-decoration: none;
    }
}

[Origin] @JavaScript globalUtilities
{
    // 全局工具函数
    window.CHTLUtils = {
        // 防抖函数
        debounce: function(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        },
        
        // 节流函数
        throttle: function(func, limit) {
            let inThrottle;
            return function() {
                const args = arguments;
                const context = this;
                if (!inThrottle) {
                    func.apply(context, args);
                    inThrottle = true;
                    setTimeout(() => inThrottle = false, limit);
                }
            }
        },
        
        // 格式化日期
        formatDate: function(date) {
            return new Intl.DateTimeFormat('zh-CN', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            }).format(date);
        },
        
        // 生成UUID
        generateUUID: function() {
            return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
                const r = Math.random() * 16 | 0;
                const v = c == 'x' ? r : (r & 0x3 | 0x8);
                return v.toString(16);
            });
        }
    };
}

html
{
    lang: "zh-CN";
    
    head
    {
        meta
        {
            charset: "UTF-8";
        }
        
        meta
        {
            name: "viewport";
            content: "width=device-width, initial-scale=1.0";
        }
        
        meta
        {
            name: "description";
            content: "CHTL开发者项目 - 展示所有CHTL语法功能的完整网站";
        }
        
        meta
        {
            name: "keywords";
            content: "CHTL, 编译器, 超文本, 开发者, 测试";
        }
        
        meta
        {
            name: "author";
            content: "CHTL开发者";
        }
        
        title
        {
            text
            {
                "CHTL开发者项目 - 全功能展示网站"
            }
        }
        
        style
        {
            @Style globalReset;
            
            .container
            {
                max-width: "1200px";
                margin: "0 auto";
                padding: "0" Theme::Spacing(lg);
            }
            
            .site-header
            {
                background: "linear-gradient(135deg," Theme::Colors(primary) "," Theme::Colors(info) ")";
                color: Theme::Colors(white);
                padding: Theme::Spacing(xl) "0";
                box-shadow: Theme::Shadows(lg);
                position: "sticky";
                top: "0";
                z-index: "100";
            }
            
            .header-content
            {
                display: "flex";
                justify-content: "space-between";
                align-items: "center";
            }
            
            .logo h1
            {
                font-size: Theme::Typography(3xl);
                font-weight: Theme::Typography(bold);
                margin-bottom: Theme::Spacing(xs);
            }
            
            .logo p
            {
                opacity: "0.9";
                font-size: Theme::Typography(sm);
            }
            
            .header-actions
            {
                display: "flex";
                gap: Theme::Spacing(md);
            }
            
            .theme-toggle,
            .menu-toggle
            {
                background: "rgba(255, 255, 255, 0.1)";
                color: Theme::Colors(white);
                border: "1px solid rgba(255, 255, 255, 0.2)";
                padding: Theme::Spacing(sm);
                border-radius: "0.375rem";
                font-size: Theme::Typography(lg);
                transition: "all 0.2s ease-in-out";
            }
            
            .theme-toggle:hover,
            .menu-toggle:hover
            {
                background: "rgba(255, 255, 255, 0.2)";
                transform: "scale(1.05)";
            }
            
            .main-content
            {
                min-height: "calc(100vh - 200px)";
                padding: Theme::Spacing(2xl) "0";
            }
            
            .section
            {
                margin-bottom: Theme::Spacing(4xl);
            }
            
            .section-title
            {
                font-size: Theme::Typography(3xl);
                font-weight: Theme::Typography(bold);
                color: Theme::Colors(gray800);
                text-align: "center";
                margin-bottom: Theme::Spacing(2xl);
                position: "relative";
            }
            
            .section-title::after
            {
                content: "''";
                position: "absolute";
                bottom: "-" Theme::Spacing(sm);
                left: "50%";
                transform: "translateX(-50%)";
                width: "80px";
                height: "4px";
                background: "linear-gradient(90deg," Theme::Colors(primary) "," Theme::Colors(accent) ")";
                border-radius: "2px";
            }
            
            .grid
            {
                display: "grid";
                gap: Theme::Spacing(xl);
            }
            
            .grid-2
            {
                grid-template-columns: "repeat(auto-fit, minmax(300px, 1fr))";
            }
            
            .grid-3
            {
                grid-template-columns: "repeat(auto-fit, minmax(250px, 1fr))";
            }
            
            .grid-4
            {
                grid-template-columns: "repeat(auto-fit, minmax(200px, 1fr))";
            }
            
            @media (max-width: 768px)
            {
                .container
                {
                    padding: "0" Theme::Spacing(md);
                }
                
                .header-content
                {
                    flex-direction: "column";
                    gap: Theme::Spacing(md);
                    text-align: "center";
                }
                
                .section-title
                {
                    font-size: Theme::Typography(2xl);
                }
                
                .grid-2,
                .grid-3,
                .grid-4
                {
                    grid-template-columns: "1fr";
                }
            }
        }
    }
    
    body
    {
        @Origin siteHeader;
        
        main
        {
            class: "main-content";
            
            div
            {
                class: "container";
                
                section
                {
                    class: "section";
                    id: "home";
                    
                    h2
                    {
                        class: "section-title";
                        
                        text
                        {
                            "欢迎使用CHTL编译器"
                        }
                    }
                    
                    div
                    {
                        class: "grid grid-3";
                        
                        Components::InteractiveCard()
                        {
                            div[1]
                            {
                                h3
                                {
                                    text
                                    {
                                        "模板系统"
                                    }
                                }
                                
                                p
                                {
                                    text
                                    {
                                        "强大的模板系统，支持继承、特例化和组合式开发。"
                                    }
                                }
                            }
                        }
                        
                        Components::InteractiveCard()
                        {
                            div[1]
                            {
                                h3
                                {
                                    text
                                    {
                                        "CHTL JS增强"
                                    }
                                }
                                
                                p
                                {
                                    text
                                    {
                                        "增强选择器、事件绑定、动画系统和虚拟对象。"
                                    }
                                }
                            }
                        }
                        
                        Components::InteractiveCard()
                        {
                            div[1]
                            {
                                h3
                                {
                                    text
                                    {
                                        "模块化开发"
                                    }
                                }
                                
                                p
                                {
                                    text
                                    {
                                        "CMOD和CJMOD模块系统，支持代码复用和扩展。"
                                    }
                                }
                            }
                        }
                    }
                }
                
                section
                {
                    class: "section";
                    id: "products";
                    
                    h2
                    {
                        class: "section-title";
                        
                        text
                        {
                            "产品展示"
                        }
                    }
                    
                    div
                    {
                        class: "grid grid-2";
                        
                        div
                        {
                            class: "product-showcase";
                            
                            style
                            {
                                .product-showcase
                                {
                                    background: "linear-gradient(135deg," Theme::Colors(gray100) "," Theme::Colors(white) ")";
                                    border: "1px solid" Theme::Colors(gray200);
                                    border-radius: "1rem";
                                    padding: Theme::Spacing(xl);
                                    text-align: "center";
                                    transition: "all 0.3s ease-in-out";
                                    position: "relative";
                                    overflow: "hidden";
                                }
                                
                                .product-showcase:hover
                                {
                                    transform: "translateY(-8px)";
                                    box-shadow: Theme::Shadows(2xl);
                                }
                                
                                .product-icon
                                {
                                    font-size: "4rem";
                                    margin-bottom: Theme::Spacing(lg);
                                    display: "block";
                                }
                                
                                .product-title
                                {
                                    font-size: Theme::Typography(xl);
                                    font-weight: Theme::Typography(bold);
                                    margin-bottom: Theme::Spacing(md);
                                    color: Theme::Colors(gray800);
                                }
                                
                                .product-description
                                {
                                    color: Theme::Colors(gray600);
                                    margin-bottom: Theme::Spacing(lg);
                                    line-height: Theme::Typography(relaxed);
                                }
                                
                                .product-features
                                {
                                    list-style: "none";
                                    text-align: "left";
                                    margin-bottom: Theme::Spacing(xl);
                                }
                                
                                .product-feature
                                {
                                    padding: Theme::Spacing(xs) "0";
                                    color: Theme::Colors(gray700);
                                    position: "relative";
                                    padding-left: Theme::Spacing(lg);
                                }
                                
                                .product-feature::before
                                {
                                    content: "✓";
                                    position: "absolute";
                                    left: "0";
                                    color: Theme::Colors(success);
                                    font-weight: Theme::Typography(bold);
                                }
                            }
                            
                            div
                            {
                                class: "product-icon";
                                
                                text
                                {
                                    "🚀"
                                }
                            }
                            
                            h3
                            {
                                class: "product-title";
                                
                                text
                                {
                                    "CHTL编译器"
                                }
                            }
                            
                            p
                            {
                                class: "product-description";
                                
                                text
                                {
                                    "强大的超文本编译器，让HTML/CSS/JS开发更加简洁高效。"
                                }
                            }
                            
                            ul
                            {
                                class: "product-features";
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "模板和自定义系统"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "CHTL JS增强语法"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "模块化开发支持"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "跨平台构建"
                                    }
                                }
                            }
                            
                            Theme::BaseButton()
                            {
                                style
                                {
                                    @Style Components::PrimaryButton;
                                }
                                
                                text
                                {
                                    "了解更多"
                                }
                            }
                            
                            script
                            {
                                {{.product-showcase}} &-> mouseenter
                                {
                                    const icon = {{&}}->querySelector('.product-icon');
                                    
                                    animate
                                    {
                                        target: icon,
                                        duration: 400,
                                        easing: "ease-out",
                                        
                                        begin: {
                                            transform: "scale(1) rotate(0deg)"
                                        },
                                        
                                        when: [
                                            {
                                                at: 0.5,
                                                transform: "scale(1.2) rotate(10deg)"
                                            }
                                        ],
                                        
                                        end: {
                                            transform: "scale(1.1) rotate(5deg)"
                                        }
                                    }
                                }
                                
                                {{.product-showcase}} &-> mouseleave
                                {
                                    const icon = {{&}}->querySelector('.product-icon');
                                    
                                    animate
                                    {
                                        target: icon,
                                        duration: 300,
                                        easing: "ease-in",
                                        
                                        begin: {
                                            transform: "scale(1.1) rotate(5deg)"
                                        },
                                        
                                        end: {
                                            transform: "scale(1) rotate(0deg)"
                                        }
                                    }
                                }
                            }
                        }
                        
                        div
                        {
                            class: "product-showcase";
                            
                            div
                            {
                                class: "product-icon";
                                
                                text
                                {
                                    "🎨"
                                }
                            }
                            
                            h3
                            {
                                class: "product-title";
                                
                                text
                                {
                                    "设计系统"
                                }
                            }
                            
                            p
                            {
                                class: "product-description";
                                
                                text
                                {
                                    "一致的设计语言，包含颜色、字体、间距和组件规范。"
                                }
                            }
                            
                            ul
                            {
                                class: "product-features";
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "主题色彩系统"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "响应式间距"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "现代字体栈"
                                    }
                                }
                                
                                li
                                {
                                    class: "product-feature";
                                    
                                    text
                                    {
                                        "阴影和动效"
                                    }
                                }
                            }
                            
                            Theme::BaseButton()
                            {
                                style
                                {
                                    @Style Components::SecondaryButton;
                                }
                                
                                text
                                {
                                    "查看文档"
                                }
                            }
                        }
                    }
                }
                
                section
                {
                    class: "section";
                    id: "about";
                    
                    h2
                    {
                        class: "section-title";
                        
                        text
                        {
                            "关于CHTL"
                        }
                    }
                    
                    div
                    {
                        class: "about-content";
                        
                        style
                        {
                            .about-content
                            {
                                max-width: "800px";
                                margin: "0 auto";
                                text-align: "center";
                            }
                            
                            .about-text
                            {
                                font-size: Theme::Typography(lg);
                                line-height: Theme::Typography(relaxed);
                                color: Theme::Colors(gray700);
                                margin-bottom: Theme::Spacing(xl);
                            }
                            
                            .features-grid
                            {
                                display: "grid";
                                grid-template-columns: "repeat(auto-fit, minmax(200px, 1fr))";
                                gap: Theme::Spacing(lg);
                                margin-top: Theme::Spacing(2xl);
                            }
                            
                            .feature-item
                            {
                                padding: Theme::Spacing(lg);
                                border-radius: "0.5rem";
                                background: Theme::Colors(gray50);
                                border: "1px solid" Theme::Colors(gray200);
                                transition: "all 0.3s ease-in-out";
                            }
                            
                            .feature-item:hover
                            {
                                background: Theme::Colors(white);
                                box-shadow: Theme::Shadows(md);
                                transform: "translateY(-4px)";
                            }
                            
                            .feature-icon
                            {
                                font-size: Theme::Typography(2xl);
                                margin-bottom: Theme::Spacing(md);
                                display: "block";
                            }
                            
                            .feature-title
                            {
                                font-weight: Theme::Typography(semibold);
                                margin-bottom: Theme::Spacing(sm);
                                color: Theme::Colors(gray800);
                            }
                            
                            .feature-desc
                            {
                                font-size: Theme::Typography(sm);
                                color: Theme::Colors(gray600);
                                line-height: Theme::Typography(relaxed);
                            }
                        }
                        
                        p
                        {
                            class: "about-text";
                            
                            text
                            {
                                "CHTL是基于C++语言实现的超文本语言，其本质是为了提供一种更符合开发者编写HTML代码的方式。通过模板系统、自定义组件、CHTL JS增强语法等特性，让Web开发变得更加简洁高效。"
                            }
                        }
                        
                        div
                        {
                            class: "features-grid";
                            
                            div
                            {
                                class: "feature-item";
                                
                                div
                                {
                                    class: "feature-icon";
                                    
                                    text
                                    {
                                        "⚡"
                                    }
                                }
                                
                                h4
                                {
                                    class: "feature-title";
                                    
                                    text
                                    {
                                        "高性能编译"
                                    }
                                }
                                
                                p
                                {
                                    class: "feature-desc";
                                    
                                    text
                                    {
                                        "毫秒级编译速度，支持大型项目的快速构建。"
                                    }
                                }
                            }
                            
                            div
                            {
                                class: "feature-item";
                                
                                div
                                {
                                    class: "feature-icon";
                                    
                                    text
                                    {
                                        "🧩"
                                    }
                                }
                                
                                h4
                                {
                                    class: "feature-title";
                                    
                                    text
                                    {
                                        "模块化设计"
                                    }
                                }
                                
                                p
                                {
                                    class: "feature-desc";
                                    
                                    text
                                    {
                                        "CMOD和CJMOD模块系统，支持代码复用和扩展。"
                                    }
                                }
                            }
                            
                            div
                            {
                                class: "feature-item";
                                
                                div
                                {
                                    class: "feature-icon";
                                    
                                    text
                                    {
                                        "🎯"
                                    }
                                }
                                
                                h4
                                {
                                    class: "feature-title";
                                    
                                    text
                                    {
                                        "类型安全"
                                    }
                                }
                                
                                p
                                {
                                    class: "feature-desc";
                                    
                                    text
                                    {
                                        "编译时类型检查，减少运行时错误。"
                                    }
                                }
                            }
                            
                            div
                            {
                                class: "feature-item";
                                
                                div
                                {
                                    class: "feature-icon";
                                    
                                    text
                                    {
                                        "🌐"
                                    }
                                }
                                
                                h4
                                {
                                    class: "feature-title";
                                    
                                    text
                                    {
                                        "跨平台支持"
                                    }
                                }
                                
                                p
                                {
                                    class: "feature-desc";
                                    
                                    text
                                    {
                                        "Windows和Linux完整支持，统一的开发体验。"
                                    }
                                }
                            }
                        }
                    }
                }
                
                section
                {
                    class: "section";
                    id: "contact";
                    
                    h2
                    {
                        class: "section-title";
                        
                        text
                        {
                            "联系我们"
                        }
                    }
                    
                    div
                    {
                        style
                        {
                            max-width: "600px";
                            margin: "0 auto";
                        }
                        
                        Components::AdvancedForm();
                    }
                }
            }
        }
        
        footer
        {
            class: "site-footer";
            
            style
            {
                .site-footer
                {
                    background: Theme::Colors(gray900);
                    color: Theme::Colors(gray300);
                    padding: Theme::Spacing(2xl) "0" Theme::Spacing(xl);
                    margin-top: Theme::Spacing(4xl);
                }
                
                .footer-content
                {
                    display: "grid";
                    grid-template-columns: "repeat(auto-fit, minmax(250px, 1fr))";
                    gap: Theme::Spacing(xl);
                    margin-bottom: Theme::Spacing(xl);
                }
                
                .footer-section h4
                {
                    color: Theme::Colors(white);
                    font-weight: Theme::Typography(semibold);
                    margin-bottom: Theme::Spacing(md);
                }
                
                .footer-links
                {
                    list-style: "none";
                }
                
                .footer-link
                {
                    display: "block";
                    padding: Theme::Spacing(xs) "0";
                    color: Theme::Colors(gray400);
                    transition: "color 0.2s ease-in-out";
                }
                
                .footer-link:hover
                {
                    color: Theme::Colors(primary);
                }
                
                .footer-bottom
                {
                    border-top: "1px solid" Theme::Colors(gray700);
                    padding-top: Theme::Spacing(lg);
                    text-align: "center";
                    color: Theme::Colors(gray500);
                    font-size: Theme::Typography(sm);
                }
            }
            
            div
            {
                class: "container";
                
                div
                {
                    class: "footer-content";
                    
                    div
                    {
                        class: "footer-section";
                        
                        h4
                        {
                            text
                            {
                                "产品"
                            }
                        }
                        
                        ul
                        {
                            class: "footer-links";
                            
                            li
                            {
                                a
                                {
                                    href: "#compiler";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "CHTL编译器"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#modules";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "模块系统"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#tools";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "开发工具"
                                    }
                                }
                            }
                        }
                    }
                    
                    div
                    {
                        class: "footer-section";
                        
                        h4
                        {
                            text
                            {
                                "资源"
                            }
                        }
                        
                        ul
                        {
                            class: "footer-links";
                            
                            li
                            {
                                a
                                {
                                    href: "#docs";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "文档"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#examples";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "示例"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#tutorials";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "教程"
                                    }
                                }
                            }
                        }
                    }
                    
                    div
                    {
                        class: "footer-section";
                        
                        h4
                        {
                            text
                            {
                                "社区"
                            }
                        }
                        
                        ul
                        {
                            class: "footer-links";
                            
                            li
                            {
                                a
                                {
                                    href: "#github";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "GitHub"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#discussions";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "讨论区"
                                    }
                                }
                            }
                            
                            li
                            {
                                a
                                {
                                    href: "#issues";
                                    class: "footer-link";
                                    
                                    text
                                    {
                                        "问题反馈"
                                    }
                                }
                            }
                        }
                    }
                }
                
                div
                {
                    class: "footer-bottom";
                    
                    text
                    {
                        "© 2024 CHTL编译器项目. 使用MIT开源协议. 由CHTL编译器生成."
                    }
                }
            }
        }
        
        // 导航栏组件
        Components::NavigationHeader();
        
        script
        {
            @Origin globalUtilities;
            
            // 全局应用初始化
            module
            {
                load: ./modules/theme-system.cjjs,
                load: ./modules/performance-monitor.cjjs,
                load: ./modules/analytics.cjjs,
                load: ./utils/dom-helpers.js
            }
            
            vir appManager = listen
            {
                currentTheme: "light",
                
                initializeApp: () => {
                    console.log('CHTL开发者项目初始化');
                    
                    // 检测系统主题偏好
                    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
                        appManager->switchTheme('dark');
                    }
                    
                    // 添加性能监控
                    appManager->startPerformanceMonitoring();
                    
                    // 添加错误监控
                    window.addEventListener('error', (e) => {
                        console.error('JavaScript错误:', e.error);
                        appManager->reportError(e.error.message, e.filename, e.lineno);
                    });
                    
                    // 添加未处理的Promise拒绝监控
                    window.addEventListener('unhandledrejection', (e) => {
                        console.error('未处理的Promise拒绝:', e.reason);
                        appManager->reportError('Promise rejection: ' + e.reason);
                    });
                },
                
                switchTheme: (theme) => {
                    appManager->currentTheme = theme;
                    document.documentElement.setAttribute('data-theme', theme);
                    
                    const themeToggle = {{.theme-toggle}};
                    themeToggle->textContent = theme === 'dark' ? '☀️' : '🌙';
                    
                    // 保存主题偏好
                    localStorage.setItem('chtl-theme', theme);
                    
                    console.log(`主题切换为: ${theme}`);
                },
                
                startPerformanceMonitoring: () => {
                    // 性能监控
                    const observer = new PerformanceObserver((list) => {
                        list.getEntries().forEach((entry) => {
                            if (entry.entryType === 'navigation') {
                                console.log(`页面加载时间: ${entry.loadEventEnd - entry.loadEventStart}ms`);
                            }
                        });
                    });
                    
                    observer.observe({ entryTypes: ['navigation', 'measure'] });
                    
                    // 内存监控
                    if (performance.memory) {
                        setInterval(() => {
                            const memory = performance.memory;
                            const used = Math.round(memory.usedJSHeapSize / 1024 / 1024);
                            const total = Math.round(memory.totalJSHeapSize / 1024 / 1024);
                            console.log(`内存使用: ${used}MB / ${total}MB`);
                        }, 60000);
                    }
                },
                
                reportError: (message, filename = '', lineno = 0) => {
                    // 错误报告
                    const errorData = {
                        message: message,
                        filename: filename,
                        lineno: lineno,
                        timestamp: new Date().toISOString(),
                        userAgent: navigator.userAgent,
                        url: window.location.href
                    };
                    
                    console.log('错误报告:', errorData);
                    
                    // 这里可以发送到错误收集服务
                    // fetch('/api/errors', { method: 'POST', body: JSON.stringify(errorData) });
                }
            };
            
            // 主题切换按钮
            {{.theme-toggle}} &-> click
            {
                const newTheme = appManager->currentTheme === 'light' ? 'dark' : 'light';
                appManager->switchTheme(newTheme);
                
                // 切换动画
                animate
                {
                    target: {{&}},
                    duration: 300,
                    easing: "ease-out",
                    
                    begin: {
                        transform: "rotate(0deg) scale(1)"
                    },
                    
                    end: {
                        transform: "rotate(180deg) scale(1.1)"
                    },
                    
                    callback: () => {
                        animate
                        {
                            target: {{&}},
                            duration: 200,
                            easing: "ease-in",
                            
                            begin: {
                                transform: "rotate(180deg) scale(1.1)"
                            },
                            
                            end: {
                                transform: "rotate(0deg) scale(1)"
                            }
                        }
                    }
                }
            }
            
            // 移动端菜单切换
            {{.menu-toggle}} &-> click
            {
                const nav = {{.main-nav}};
                const isVisible = nav->style.display !== 'none';
                
                if (isVisible) {
                    animate
                    {
                        target: nav,
                        duration: 300,
                        easing: "ease-out",
                        
                        begin: {
                            opacity: "1",
                            transform: "translateY(0)"
                        },
                        
                        end: {
                            opacity: "0",
                            transform: "translateY(-20px)"
                        },
                        
                        callback: () => {
                            nav->style.display = 'none';
                        }
                    }
                } else {
                    nav->style.display = 'flex';
                    animate
                    {
                        target: nav,
                        duration: 300,
                        easing: "ease-in",
                        
                        begin: {
                            opacity: "0",
                            transform: "translateY(-20px)"
                        },
                        
                        end: {
                            opacity: "1",
                            transform: "translateY(0)"
                        }
                    }
                }
            }
            
            // 页面加载完成后初始化
            document.addEventListener('DOMContentLoaded', () => {
                // 恢复保存的主题
                const savedTheme = localStorage.getItem('chtl-theme') || 'light';
                appManager->switchTheme(savedTheme);
                
                // 初始化应用
                appManager->initializeApp();
                
                // 添加页面加载完成的视觉反馈
                animate
                {
                    target: document.body,
                    duration: 800,
                    easing: "ease-out",
                    
                    begin: {
                        opacity: "0"
                    },
                    
                    end: {
                        opacity: "1"
                    }
                }
                
                console.log('CHTL开发者项目加载完成');
            });
            
            // 页面卸载前保存状态
            window.addEventListener('beforeunload', () => {
                localStorage.setItem('chtl-last-visit', new Date().toISOString());
            });
        }
    }
}

except iframe, embed, object;  // 约束：禁止使用这些元素

use html5;
use @Config Theme::Colors;